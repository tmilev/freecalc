\ProvidesPackage{pstricks-commands}
\usepackage{etex}
\usepackage{auto-pst-pdf}
\usepackage{pst-plot}
\usepackage{pst-math}
%WARNING THE FOLLOWING PACKAGE IS BROKEN use only with EXTREME CAUTION
%\usepackage{pst-3dplot}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% List of commands in this document
%
%
% \psFullDot        (Default dot to be used for points on graphs of functions).
% \psHollowDot      (Default dot to be used for points on graphs of functions).
% \psHollowDotBlue 
% \psFullDotBlack
% \psFullDotBlue
% \psLabelXOne      (labels one on x axis)
% \psLabelYOne      (labels one on y axis)
% \psLabels         (writes x and y labels )
% \psLabelsWithOnes (same as \psLabels + in addition labels 1 on the x and y axis)
%\psaxesStandard (default display of axes with x and y label, takes two arguments)
%\psLabelNumberXaxis
%\psLabelNumberYaxis
%\psXTickWithLabel
%\psYTickWithLabel
%\psDirectionField
%\psDirectionFieldDefault
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\psHollowDot}[2]{
\pscircle*[fillcolor=white, linecolor=red](#1, #2){0.07}
\pscircle*[fillcolor=white, linecolor=white](#1, #2){0.04}
}

\newcommand{\psFullDot}[2]{
\pscircle*[fillcolor=white, linecolor=red](! #1 #2){0.07}
}

\newcommand{\psHollowDotBlue}[2]{
\pscircle*[fillcolor=white, linecolor=blue](#1, #2){0.07}
\pscircle*[fillcolor=white, linecolor=white](#1, #2){0.04}
}
\newcommand{\psFullDotBlack}[2]{
\pscircle*[fillcolor=white, linecolor=black](#1, #2){0.07}
}
\newcommand{\psFullDotBlue}[2]{
\pscircle*[fillcolor=white, linecolor=blue](#1, #2){0.07}
}
\newcommand{\psXTickColored}[2]{\psline[linecolor=#1](#2, -0.1)(#2,0.1)}

\newcommand{\psXTick}[1]{\psline(#1, -0.1)(#1,0.1)}
\newcommand{\psYTick}[1]{\psline(-0.1, #1)(0.1, #1)}
\newcommand{\psXYTick}[2]{\psXTick{#1} \psYTick{#2}}

\newcommand{\psXTickWithLabel}[2]{\psXTick{#1}\rput[t](#1,-0.2){#2}}
\newcommand{\psYTickWithLabel}[2]{\psYTick{#1}\rput[r](-0.2,#1){#2}}

\newcommand{\psLabelNumberXaxis}[1]{\psXTickWithLabel{#1}{#1}}
\newcommand{\psLabelNumberYaxis}[1]{\psYTickWithLabel{#1}{#1}}

\newcommand{\psLabelNumberXYaxes}[2]{\psLabelNumberXaxis{#1} \psLabelNumberYaxis{#2} }

\newcommand{\psLabelXOne}{\psLabelNumberXaxis{1} }
\newcommand{\psLabelYOne}{\psLabelNumberYaxis{1} }

\newcommand{\psLabelOnXaxis}[2]{\psXTick{#1}\rput[t](#1,-0.2){#2}}
\newcommand{\psLabelOnYaxis}[2]{\psYTick{#1}\rput[r](-0.2, #1){#2}}

\newcommand{\psLabels}[2]{\rput[t](! #1 -0.1){$x$}\rput[r](! -0.1 #2){$y$}}
\newcommand{\psLabelsWithOnes}[2]{\psline(1, -0.1)(1,0.1) \rput[t](1, -0.2 ) { $1$} \psline(-0.1, 1)(0.1, 1) \rput[r](-0.2, 1 ) { $1$} \psLabels{#1}{#2}}

\newcommand{\psaxesStandardNoFrame}[4]{%
\psaxes[ticks=none, labels=none]{<->}(0,0)(#1,#2)(#3,#4)\psLabels{#3}{#4}
}%

\newcommand{\psaxesStandard}[4]{%
\psframe*[linecolor=white](! #1\space #2)(! #3 \space 0.1 add #4 \space 0.1 add)% 
\psaxesStandardNoFrame{#1}{#2}{#3}{#4}
}%
\newcommand{\psColorTangent}{blue}
\newcommand{\psColorGraph}{red}
\newcommand{\psColorAreaUnderGraph}{cyan}
\newcommand{\psColorNegativeAreaUnderGraph}{orange}

\newcommand{\psMachine}[2]{
\pscustom*[linecolor=#2]{
\psline(1,1.1)(1,0.1)(1.5,0.1)(2, 0.6)(2.5, 0.6)(2.5, -0.6)(2, -0.6)(1.5,-0.1)(1,-0.1)(1,-1.1)(-1,-1.1)(-1,-0.1)(-1.5,-0.1)(-2, -0.6)(-2.5, -0.6)(-2.5, 0.6)(-2, 0.6)(-1.5,0.1)(-1,0.1)(-1,1.1)
}
\pscircle*[linecolor=white](0,0){0.3}
\rput(0,0){#1}
}


%command format 
%first argument gives you formula for the direction field in 
%postscript notation, for example x y add.
%second and third argument give the starting x,y coordinates
\newcommand{\directionFieldOneTangent}[6]{%
\pstVerb{%
/x #2 \space def%
/y #3 \space def%
/F #1 \space def%
}%
\psline[#6](! x F ATAN 57.295 mul cos #4 mul sub y F ATAN 57.295 mul sin #4 mul sub)(! x F ATAN 57.295 mul cos #4 mul add y F ATAN 57.295 mul sin #4 mul add)%
\pscircle*[linecolor=red!60](! x y){#5}%
}

\newcommand{\directionFieldOneTangentDefault}[3]{%
\directionFieldOneTangent{#1}{#2}{#3}{0.3}{0.03}{linecolor=blue}%
}

%command format 
%first argument gives you formula for the direction field in 
%postscript notation, for example x y add.
%second and third argument give the starting x,y coordinates
%fourth coordinate gives the delta x=delta y
%fifth command gives the number of iterations delta x and delta y is repeated in each direction
%sixth argument gives the length of the vector
%seventh  argument gives the circle radius
%eighth argument gives the arguments of the psline command
%command format 
%first argument gives you formula for the direction field in 
%postscript notation, for example x y add.
%second and third argument give the starting x,y coordinates
%fourth coordinate gives the delta x=delta y
%fifth command gives the number of iterations delta x and delta y is repeated in each direction
%sixth argument gives the length of the vector
%seventh argument gives the dot diameter
%eighth argument gives the direction line arguments
\newcommand{\directionFieldFull}[8]{%
\multido{\ra=#2+#4}{#5}{%
  \multido{\rb=#3+#4}{#5}{%
  \directionFieldOneTangent{#1}{\ra}{\rb}{#6}{#7}{#8}%
  }%end multido
}%end multido
}%end newcommand

\newcommand{\directionFieldDefault}[5]{%
\directionFieldFull{#1}{#2}{#3}{#4}{#5}{0.2}{0.02}{linecolor=blue}%
}%
\newcommand{\directionFieldDefaultRange}[1]{%
\directionFieldFull{#1}{-4}{-4}{0.5}{21}{0.2}{0.02}{linecolor=blue}%
}

\newcommand{\psAngleOptions}[5]{
\ifPst@algebraic{%
\parametricplot[#5]{#1}{#2}{cos(t)*#3|sin(t)*#3}%
\rput(! #1 #2 add 2 div 57.29578 mul cos #3 0.2 add mul #1 #2 add 2 div 57.29578 mul sin #3 0.2 add mul){#4}%
}%
\else%
\parametricplot[#5]{#1}{#2}{t 57.29578 mul cos #3 mul t 57.29578 mul sin #3 mul}%
\rput(! #1 #2 add 2 div 57.29578 mul cos #3 0.2 add mul #1 #2 add 2 div 57.29578 mul sin #3 0.2 add mul){#4}%
\fi%
}

\newcommand{\psAngleWithArrow}[4]{
\psAngleOptions{#1}{#2}{#3}{#4}{linecolor=\psColorGraph, arrows=->, plotpoints=100}
}

\newcommand{\psAngle}[4]{
\psAngleOptions{#1}{#2}{#3}{#4}{linecolor=\psColorGraph, plotpoints=100}
}

\newcommand{\psLengthIndicator}[5]{
\psline[arrows=<-, linecolor=red](! #1 #2)(! #1 0.58 mul #3 0.42 mul add #2 0.58 mul #4 0.42 mul add)
\psline[arrows=->, linecolor=red]{->}(! #1 0.42 mul #3 0.58 mul add #2 0.42 mul #4 0.58 mul add)(! #3 #4)
\rput(! #1 #3 add 0.5 mul #2 #4 add 0.5 mul){ #5}
}
\newcommand{\drawPolar}[4]{%
\ifPst@algebraic{%
\parametricplot[#4]{#1}{#2}{(#3) *cos(t) | (#3) * sin(t)}%
}%
\else%
\parametricplot[#4]{#1}{#2}{#3 t 57.29578 mul cos mul #3 t 57.29578 mul sin mul}%
\fi%
}

\newcommand{\drawPolarWithArrow}[4]{
\drawPolar{#1}{#1 #2 add 2 div}{#3}{arrows=->, #4}
\drawPolar{#1 #2 add 2 div}{#2}{#3}{#4}
}

\newcommand{\polarWedge}[3]{%
\ifPst@algebraic{%
\rput(0,0){Set algebraic to FALSE}%
}%
\else%
\pstVerb{%
/firstX  1 dict begin /t #1 def #1 57.29578 mul cos #3 mul end def%
/firstY  1 dict begin /t #1 def #1 57.29578 mul sin #3 mul end def%
/secondX 1 dict begin /t #2 def #2 57.29578 mul cos #3 mul end def%
/secondY 1 dict begin /t #2 def #2 57.29578 mul sin #3 mul end def%
}%
\pscustom[fillcolor=\psColorAreaUnderGraph, fillstyle=solid, linecolor=blue]{%
\psline(0,0)(! firstX firstY)(! secondX secondY)(0,0)%
}%
\fi%
}%

\newcommand{\polarWedgeSequence}[4]{%
\multido{\ra=#1+#2}{#3}{%
\polarWedge{\ra}{\ra\space #2 add}{#4}
}%
}
